# Create Region with proper flags and fix flags. 
# Supports multiple owners as final arguments.

*:/cregion $name $ = >>>
	if (sk_region_exists($name)) {
		die(color(RED).'A region by that name already exists.')
	} else {
		run('/region define '.$name.' '.$)
		_add_flags($name, 250, 6)
	}
<<<
*:/cregion $name = msg(color(RED).'You must specify an owner as well. /cregion <name> <owner>')

*:/addflags $name = >>>
	if (! sk_region_exists($name)) {
		die(color(RED).'There is no region by that name.')
	} else {
		run(concat('/region flag ', $name, ' use allow'))
		run(concat('/region flag ', $name, ' interact allow'))
		run(concat('/region flag ', $name, ' chest-access allow'))
		run(concat('/region flag ', $name, ' vehicle-place allow'))
		run(concat('/region flag ', $name, ' vehicle-destroy allow'))
		run(concat('/region flag ', $name, ' ride allow'))
                if (import('sharedata.source') == 'creative') {
			run(concat('/region flag ', $name, ' date ', simple_date('yyyy/MM/dd HH:mm:ss z')))
			run(concat('/region flag ', $name, ' created-by ', player()))
		}
		if (import('sharedata.source') == 'pve') {
			run(concat('/region flag ', $name, ' date ', simple_date('yyyy/MM/dd HH:mm:ss z')))
			run(concat('/region flag ', $name, ' created-by ', player()))
			run(concat('/region flag ', $name, ' damage-animals allow'))
		}
	}
<<<


*:/members $region = >>>
        assign(@ro, array_get(sk_region_info($region, pworld()), 1))
        assign(@rm, array_get(sk_region_info($region, pworld()), 2))
        assign(@first, true)
        foreach(@ro, @player,
                if(equals(@first, true),
                        assign(@first, false)
                        assign(@final, concat(@final, @player)),
                        assign(@final, concat(@final, ', ', @player))
                )
        )
        foreach(@rm, @player,
                if(equals(@first, true),
                        assign(@first, false)
                        assign(@final, concat(@final, @player)),
                        assign(@final, concat(@final, ', ', @player))
                )
        )

        msg(concat(color(gray), 'Members of ', $region, ': ', color(white), @final))
<<<

*:/owners $region = >>>
        assign(@ro, array_get(sk_region_info($region, pworld()), 1))
        assign(@first, true)
        foreach(@ro, @player,
                if(equals(@first, true),
                        assign(@first, false)
                        assign(@final, concat(@final, @player)),
                        assign(@final, concat(@final, ', ', @player))
                )
        )
        msg(concat(color(gray), 'Owners of ', $region, ': ', color(white), @final))
<<<


# Show help for no-args invocation.

nerdch.level.admin:'/region-rename' = >>>
	msg(color(RED).'/region-rename oldName newName')
	msg(color(RED).'    Rename a region. The new region name must not be in use.')
	die()
<<<

nerdch.level.admin:'/region-rename' $oldName $newName = >>>
	if (!sk_region_exists($oldName)) {
		die(color(RED).'Region \''.$oldName.'\' does not exist in this world.')
	}
	if (sk_region_exists($newName)) {
		die(color(RED).'A region named \''.$newName.'\' already exists in this world.')
	}
	sk_region_rename($oldName,$newName)
	msg(color(GOLD).'Renamed region \''.$oldName.'\' as \''.$newName.'\'.')
<<<


# Test whether there are any regions intersecting the current selection.
# Limitations: 
# 	* There is no way to get the poly selection points, so a cuboid is assumed.
#	* A temporary region is created since selections can't be tested. The temporary
#	  region is immediately removed.
#	* sk_pos[12]() stay set even after //desel (CH or WorldGuard bug?)

*:'/region-intersects' = >>>
	_assertperm('restricted')
	@p1 = sk_pos1()
	@p2 = sk_pos2()
	msg(color(GOLD).'Point 1: '.color(YELLOW).@p1)
	msg(color(GOLD).'Point 2: '.color(YELLOW).@p2)
	if (is_null(@p1) || is_null(@p2)) {
		die(color(RED).'You need to make a cuboid selection.')
	} else {
		@tempRegionName = player().'_intersection_test'
		if (sk_region_exists(@tempRegionName)) {
			# Unless there's a bug, the temp region should be removed.
			sk_region_update(@tempRegionName, array(@p1, @p2))
		} else {
			sk_region_create(@tempRegionName, array(@p1, @p2))
		}
		try(
			@testedRegions = sk_all_regions(pworld())
			@regions = sk_region_intersect(pworld(), @tempRegionName, @testedRegions)
			@message = color(GOLD).'Intersecting regions: '
			@first = true
			foreach (@regions, @region, 
				if (@region != @tempRegionName) {
					if (@first) {
						@first = false
					} else {
						@message = @message.color(WHITE).', '
					}
					@owners = array_get(sk_region_info(@region, pworld()), 1)
					@formattedOwners = array_implode(@owners, ', ')
					@message = @message.color(YELLOW).@region.color(GRAY).' ('.@formattedOwners.')'
				}
			)
			msg(@message)
		,@e,
			msg(color(RED).'Error: '.e)
		)
		sk_region_remove(@tempRegionName)
	}
<<<
