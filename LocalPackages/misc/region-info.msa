
*:'/regions-here' [$] = >>>
	msg(color(YELLOW).'Regions located here: '.color(WHITE).array_implode(sk_regions_at(ploc()), ', '))
<<<

*:'/regions-there' [$] = >>>
	msg(color(YELLOW).'Regions located there: '.color(WHITE).array_implode(sk_regions_at(pcursor()), ', '))
<<<

<<<<<<< HEAD
*:'/regions-at' $x $y $z [$world=world] = >>>
	msg(color(YELLOW).'Regions located at '.$x.' '.$y.' '.$z.'in '.$world.': '.color(WHITE).array_implode(sk_regions_at(array($x,$y,$z,$world)), ', '))
=======
*:'/regions-at' $x $y $z [$world] = >>>
	msg(color(YELLOW).'Regions located at '.$x.' '.$y.' '.$z.'in '.if(equals($world,''),pworld(),$world).': '.color(WHITE).array_implode(sk_regions_at(array($x,$y,$z,if(equals($world,''),pworld(),$world))), ', '))
>>>>>>> ffb133db389c4cd42a5dbeea2e3a09803fecef1a
<<<

# mattman00000 anxiously awaits padmin approval for this part
#*:'/regions-intersecting' $region [$world] = >>>
#	msg(color(YELLOW).'Regions located there: '.color(WHITE).array_implode(sk_region_intersect(if(equals($world,''),pworld(),$world), $region), ', '))
#<<<
